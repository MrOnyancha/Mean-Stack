{"version":3,"sources":["../test.js"],"names":["assert","require","equal","notEqual"],"mappings":";;AAKA;;AAGA,IAAIA,SAASC,QAAQ,QAAR,CAAb,C,CARA;;;;AAYA,qBAAS,YAAT,EAAuB,YAAW;;AAEjC,gBAAG,OAAH,EAAY,YAAU;AACrBD,SAAOE,KAAP,CAAa,GAAb,EAAkB,GAAlB;AACA,EAFD;;AAIA,gBAAG,kBAAH,EAAsB,YAAK;AAC1BF,SAAOE,KAAP,CAAa,GAAb,EAAkB,CAAlB;AACA,EAFD;;AAMA,sBAAS,WAAT,EAAsB,YAAW;;AAEhC,iBAAG,aAAH,EAAkB,YAAU;AAC3BF,UAAOE,KAAP,CAAa,MAAb,EAAqB,MAArB;AACA,GAFD;;AAIA,iBAAG,cAAH,EAAkB,YAAK;AACtBF,UAAOG,QAAP,CAAgB,GAAhB,EAAqB,CAArB;AACA,GAFD;AAGA,EATD;AAWA,CAvBD","file":"test.js","sourcesContent":["/**\n * Created by chrisp on 14/12/2016.\n */\n\n\nimport {describe, it} from \"mocha\";\n\n\nvar assert = require(\"assert\");\n\n\n\ndescribe(\"my feature\", function (){\n\n\tit(\"work \", function(){\n\t\tassert.equal(\"A\", \"A\");\n\t});\n\n\tit(\"fails gracefully\",() =>{\n\t\tassert.equal(\"A\", 2);\n\t});\n\n\n\n\tdescribe(\"my innner\", function (){\n\n\t\tit(\"inner work \", function(){\n\t\t\tassert.equal(\"XXXX\", \"YYYY\");\n\t\t});\n\n\t\tit(\"inner fails \",() =>{\n\t\t\tassert.notEqual(\"A\", 2);\n\t\t});\n\t});\n\n});"]}