{"version":3,"sources":["../../routes/api.js"],"names":["express","bodyparser","status","api","handleOne","handleMany","hashSalt","require","module","exports","wagner","Router","use","json","get","invoke","Donor","req","res","find","$and","$geoWithin","$centerSphere","params","log","lat","range","$eq","bloodgroup","score","$meta","sort","limit","parseInt","exec","bind","findOne","phone","passcode","BloodGroup","_id","property","error","result","console","INTERNAL_SERVER_ERROR","toString","NOT_FOUND"],"mappings":"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","file":"api.js","sourcesContent":["/**\n * Created by chrisp on 24/08/2016.\n */\n\n/*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\", \"dir\"] }] */\n\n\nlet express, bodyparser, status, api, handleOne, handleMany, hashSalt;\n\nexpress = require(\"express\");\n\nstatus = require(\"http-status\");\n\nbodyparser = require(\"body-parser\");\n\nmodule.exports = (wagner) => {\n\tapi = express.Router();\n\n\tapi.use(bodyparser.json());\n    //\n    // api.put(\"/donor/add\", wagner.invoke((Donor)=> {\n    //     return (req, res)=> {\n    //         try {\n    //             var doner = req.body.donor;\n    //         } catch (e) {\n    //             return res.status(status.BAD_REQUEST).json({error: \"No cart specified! \"});\n    //         }\n    //\n    //         req.body.donor= doner;\n    //         req.body.donor.save((error, user)=> {\n    //             if (error) return res.status(status.INTERNAL_SERVER_ERROR).json({error: error.toString()});\n    //             return res.json({user: user});\n    //         });\n    //     }\n    // }));\n\n\n\n\n    // Simple rest api to return the cordinates\n\tapi.get(\"/donor/search/:log/:lat/:limit/:range/:bloodgroup\", wagner.invoke((Donor)=> {\n\n\n\t\treturn (req, res)=> {\n\t\t\t// var bloodGroup = \"B+\";\n\n\t\t\tDonor.find(\n\t\t\t\t{\n\t\t\t\t\t$and:\n\t\t\t\t\t[\n\t\t\t\t\t\t{//1350/3963.2\n\t\t\t\t\t\t\t\"loc.coordinates\": { $geoWithin: { $centerSphere: [ [  req.params.log,req.params.lat ], req.params.range  ] } }\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"bloodGroup.canDonateTo\": { $eq : req.params.bloodgroup}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}, {score: {$meta: \"textScore\"}}).sort({score: {$meta: \"textScore\"}}).limit(parseInt(req.params.limit)).exec(handleMany.bind(null, \"donors\", res));\n\t\t};\n\t}));\n\n\tapi.get(\"/donor/getMe/:phone/:passcode\", wagner.invoke((Donor)=> {\n\t\thashSalt = \"IHngate#bi*Tall\";\n\t\t// passcode = hashSalt+\"Chris123\";\n\t\t// phone =\"+256703326159\";\n\t\treturn (req, res)=> {\n\t\t\tDonor.findOne(\n\t\t\t\t{\n\t\t\t\t\t$and: [\n                        {\"phone\": {$eq: req.params.phone}},\n                        {\"password\": {$eq:(hashSalt+req.params.passcode)}}\n\t\t\t\t\t]\n\t\t\t\t}\n                , {score: {$meta: \"textScore\"}}).exec(handleOne.bind(null, \"donors\", res));\n\t\t};\n\t}));\n\n\n\n\n\tapi.get(\"/bloodgroup/list\",wagner.invoke((BloodGroup)=>{\n\t\treturn (req,res)=>{\n\t\t\tBloodGroup.find().sort({_id: 1}).exec( handleMany.bind(null, \"bloodgroups\", res));\n\t\t};\n\t}));\n\n\n\treturn api;\n};\n\nhandleOne = (property, res, error, result)=> {\n\tconsole.log(result);\n\tconsole.log(property);\n\tif (error) return res.status(status.INTERNAL_SERVER_ERROR).json({error: error.toString()});\n\tif (!result) return res.status(status.NOT_FOUND).json({error: \"Not found\"});\n\tvar json = {};\n\tjson[property] = result;\n\tres.json(json);\n};\n\n\nhandleMany = (property, res, error, result)=> {\n\tif (error) return res.status(status.INTERNAL_SERVER_ERROR).json({error: error.toString()});\n\tif (!result) return res.status(status.NOT_FOUND).json({error: \"Not found\"});\n\tvar json = {};\n\tjson[property] = result;\n\tres.json(json);\n};\n\n// vmq-admin listener start address=104.197.118.93 port=1885 --mountpoint /ntvgo --nr_of_acceptors=10 --max_connections=1000"]}