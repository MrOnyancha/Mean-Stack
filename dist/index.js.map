{"version":3,"sources":["../index.js"],"names":["express","wagner","path","logger","app","require","use","static","join","__dirname","maxAge","req","res","next","err","Error","status","get","render","message","error","listen","console","log"],"mappings":";;AAAA;;;;AAKA;;AAEA,IAAIA,gBAAJ;AAAA,IAAaC,eAAb;AAAA,IAAqBC,aAArB;AAAA,IAA2BC,eAA3B;AAAA,IAAmCC,YAAnC;;AAEAJ,UAAUK,QAAQ,SAAR,CAAV;AACAJ,SAASI,QAAQ,aAAR,CAAT;AACAH,OAAOG,QAAQ,MAAR,CAAP;AACAF,SAASE,QAAQ,QAAR,CAAT;;AAEAA,QAAQ,oCAAR,EAA8CJ,MAA9C;AACA;;AAEAG,MAAMJ,SAAN;AACAI,IAAIE,GAAJ,CAAQH,OAAO,KAAP,CAAR;AACA;AACAC,IAAIE,GAAJ,CAAQN,QAAQO,MAAR,CAAeL,KAAKM,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,EAA8C,EAAEC,QAAQ,IAAI,EAAJ,GAAS,EAAT,GAAc,IAAxB,CAA6B,UAA7B,EAA9C,CAAR;AACAN,IAAIE,GAAJ,CAAQ,SAAR,EAAmBD,QAAQ,cAAR,EAAwBJ,MAAxB,CAAnB;;AAEAG,IAAIE,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3B,KAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,KAAIE,MAAJ,GAAa,GAAb;AACAH,MAAKC,GAAL;AACA,CAJD;;AAMA,IAAIV,IAAIa,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACrCb,KAAIE,GAAJ,CAAQ,UAACQ,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAChCD,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,MAAIM,MAAJ,CAAW,OAAX,EAAoB;AACnBC,YAASL,IAAIK,OADM;AAEnBC,UAAON;AAFY,GAApB;AAIA,EAND;AAOA;;AAODV,IAAIiB,MAAJ,CAAY,IAAZ;;AAEAC,QAAQC,GAAR,CAAY,wBAAZ","file":"index.js","sourcesContent":["/**\n * Created by Eng Chrispinus on 10/12/2016.\n */\n\n\n/*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\", \"dir\"] }] */\n\nlet express, wagner, path, logger, app;\n\nexpress = require(\"express\");\nwagner = require(\"wagner-core\");\npath = require(\"path\");\nlogger = require(\"morgan\");\n\nrequire(\"./public/javascripts/server/models\")(wagner);\n// require(\"./public/javascripts/server/dependencies\")(wagner);\n\napp = express();\napp.use(logger(\"dev\"));\n// wagner.invoke(require(\"./public/javascripts/server/auth\"),{app:app});\napp.use(express.static(path.join(__dirname, \"public\"),{ maxAge: 4 * 60 * 60 * 1000 /* 2hrs */ }));\napp.use(\"/api/v1\", require(\"./routes/api\")(wagner));\n\napp.use((req, res, next) => {\n\tlet err = new Error(\"Not Found\");\n\terr.status = 404;\n\tnext(err);\n});\n\nif (app.get(\"env\") === \"development\") {\n\tapp.use((err, req, res, next) => {\n\t\tres.status(err.status || 500);\n\t\tres.render(\"error\", {\n\t\t\tmessage: err.message,\n\t\t\terror: err\n\t\t});\n\t});\n}\n\n\n\n\n\n\napp.listen (3000);\n\nconsole.log(\"Listening at port 3000\");\n\n\n"]}