{"version":3,"sources":["../../models/donor.js"],"names":["mongoose","BloodGroup","donorSchema","schema","require","firstName","type","String","required","lowercase","lastName","phone","trim","match","email","unique","password","loc","coordinates","Number","bloodGroup","bloodGroupSchema","data","lastDonation","Schema","index","set","virtuals","module","exports"],"mappings":";;AAAA;;;;AAKA,IAAIA,iBAAJ;AAAA,IAAcC,mBAAd;AAAA,IAA0BC,oBAA1B;AAAA,IAAuCC,eAAvC;;AAEAH,WAAWI,QAAQ,UAAR,CAAX;AACAH,aAAaG,QAAQ,cAAR,CAAb;;AAEAF,cAAc;AACbG,YAAW;AACVC,QAAMC,MADI;AAEVC,YAAU,IAFA;AAGVC,aAAW;AAHD,EADE;AAMbC,WAAU;AACTJ,QAAMC,MADG;AAETC,YAAU,IAFD;AAGTC,aAAW;AAHF,EANG;AAWbE,QAAO;AACNL,QAAMC,MADA;AAENK,QAAM,IAFA;AAGNJ,YAAU,CAAC,IAAD,EAAM,4BAAN,CAHJ;AAINK,SAAO,CAAE,6EAAF,EAAkF,oCAAlF;AAJD,EAXM;AAkBb;AACA;AACA;AACA;AACAC,QAAO;AACNR,QAAMC,MADA;AAENK,QAAM,IAFA;AAGNG,UAAQ,CAAE,IAAF,EAAQ,uBAAR,CAHF;AAINP,YAAU,CAAE,IAAF,EAAO,4BAAP,CAJJ;AAKNK,SAAO,CAAE,WAAF,EAAe,gCAAf;AALD,EAtBM;AA6BbG,WAAU;AACTV,QAAMC,MADG;AAETK,QAAM,IAFG;AAGTJ,YAAU;AAHD,EA7BG;AAkCb;AACA;AACAS,MAAM;AACLX,QAAO;AACNA,SAAOC;AADD,GADF;AAILW,eAAc,EAAEZ,MAAM,CAAEa,MAAF,CAAR;AAJT,EApCO;AA0CbC,aAAYnB,WAAWoB,gBA1CV;AA2CbC,OAAM;AACL;AACAC,gBAAc;AACbjB,SAAMa;AADO;AAFT;AA3CO,CAAd;;AAoDAhB,SAAS,IAAIH,SAASwB,MAAb,CAAoBtB,WAApB,CAAT;;AAIAC,OAAOsB,KAAP,CAAa,EAACpB,WAAW,MAAZ,EAAb;AACAF,OAAOsB,KAAP,CAAa,EAACf,UAAU,MAAX,EAAb;AACAP,OAAOsB,KAAP,CAAa,EAAC,mBAAmB,CAApB,EAAb;;AAEAtB,OAAOuB,GAAP,CAAW,UAAX,EAAuB,EAACC,UAAU,IAAX,EAAvB;AACAxB,OAAOuB,GAAP,CAAW,QAAX,EAAqB,EAACC,UAAU,IAAX,EAArB;;AAEAC,OAAOC,OAAP,GAAiB1B,MAAjB;AACAyB,OAAOC,OAAP,CAAe3B,WAAf,GAA6BA,WAA7B","file":"donor.js","sourcesContent":["/**\n * Created by chrisp on 23/12/2016.\n */\n\n\nlet mongoose, BloodGroup, donorSchema, schema;\n\nmongoose = require(\"mongoose\");\nBloodGroup = require(\"./bloodgroup\");\n\ndonorSchema = {\n\tfirstName: {\n\t\ttype: String,\n\t\trequired: true,\n\t\tlowercase: true\n\t},\n\tlastName: {\n\t\ttype: String,\n\t\trequired: true,\n\t\tlowercase: true\n\t},\n\tphone: {\n\t\ttype: String,\n\t\ttrim: true,\n\t\trequired: [true,\"User phone number required\"],\n\t\tmatch: [ /^(([\\+]?(256))|0)?7\\(?([8|7|5|0|1|3|9])\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{3})$/,  \"User the formart +xx xxx xxxx xxx \"],\n\t\t// match: \"^(([\\\\+]?(256))|0)?7\\\\(?([8|7|5|0|1|3|9])\\\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{3})$\"\n\t},\n\t// +256 78-5245-009\n\t// 25678 5245 009\n\t// 078 5245 009\n\t// 78 5245 009\n\temail: {\n\t\ttype: String,\n\t\ttrim: true,\n\t\tunique: [ true, \"Email already exists.\" ],\n\t\trequired: [ true,\"Email address is required.\"],\n\t\tmatch: [ /.+@.+\\..+/, \"User email format XXXX@YYY.PPP\"]\n\t},\n\tpassword: {\n\t\ttype: String,\n\t\ttrim: true,\n\t\trequired: true\n\t},\n\t// onyanchachrispinus@gmail.com\n\t// vvvv@jjjj.oo\n\tloc : {\n\t\ttype : {\n\t\t\ttype : String\n\t\t},\n\t\tcoordinates : { type: [ Number ] }\n\t},\n\tbloodGroup: BloodGroup.bloodGroupSchema,\n\tdata: {\n\t\t// auto: {ty},\n\t\tlastDonation: {\n\t\t\ttype: Number\n\t\t}\n\t}\n};\n\n\nschema = new mongoose.Schema(donorSchema);\n\n\n\nschema.index({firstName: \"text\"});\nschema.index({lastName: \"text\"});\nschema.index({\"loc.coordinates\": 1});\n\nschema.set(\"toObject\", {virtuals: true});\nschema.set(\"toJSON\", {virtuals: true});\n\nmodule.exports = schema;\nmodule.exports.donorSchema = donorSchema;\n"]}